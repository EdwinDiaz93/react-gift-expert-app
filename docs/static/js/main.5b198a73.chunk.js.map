{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GiftExpertApp","categories","ReactDOM","render","document","querySelector"],"mappings":"qMAoCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBAC9BC,EAD8B,KAClBC,EADkB,KAiBrC,OACI,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAOlB,SACG,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAnBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEgCC,UAAUH,GAF1C,+DAGFI,MAAMF,GAHJ,cAGdG,EAHc,gBAIDA,EAAKC,OAJJ,uBAIbC,EAJa,EAIbA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAVpB,kBAcbM,GAda,4CAAH,sDCERO,EAAe,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEhC,OACI,mCACA,sBAAKc,UAAU,0CAAf,UACA,6BAAKJ,IACD,qBAAKK,IAAKf,UCoBPgB,EAxBE,SAAC,GAAgB,IAAD,ECDJ,SAAClB,GAAc,IAAD,EACfd,mBAAS,CAC7BqB,KAAK,GACLY,SAAQ,IAH2B,mBAChCC,EADgC,KAC1BC,EAD0B,KAmBvC,OAZAC,qBAAU,WACNvB,EAASC,GACJuB,MAAK,SAAAC,GAEEH,EAAS,CACLd,KAAKiB,EACLL,SAAQ,SAI1B,CAACnB,IAEIoB,EDhBqBK,CAFC,EAAdzB,UAERmB,EAFsB,EAEtBA,QAAaN,EAFS,EAEdN,KACf,OACI,qCACCY,GAAW,oBAAIH,UAAU,oCAAd,0BACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE2BlBe,EApCO,WAAO,IAAD,EAEYxC,mBAAS,CAAC,cAFtB,mBAEjByC,EAFiB,KAEL1C,EAFK,KAUxB,OACI,qCACA,gDACA,cAAC,EAAD,CACIA,cAAeA,IAGnB,uBAGA,6BAEQ0C,EAAWlB,KAAI,SAAAT,GAAQ,OAEvB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCzBzB4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,cAAc,Y","file":"static/js/main.5b198a73.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue]=useState(\"\");\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue(\"\");\r\n        }\r\n        else{\r\n            return;\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>            \r\n           <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired,\r\n}\r\nexport default AddCategory;","export const getGifts = async(category)=>{\r\n    // Siempre se le debe de aÃ±adir https\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=8qZRjkUCEpxJRbFWI3tUYbVaD9ZLs0y9&limit=10`;\r\n    const resp= await fetch(url);\r\n    const {data}=await resp.json();\r\n    \r\n    const gifts=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        };\r\n    });\r\n    \r\n    return(gifts);\r\n};","import React from 'react'\r\n\r\nexport const GiftGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"card animate__animated  animate__fadeIn\">\r\n        <h3>{title}</h3>\r\n            <img src={url}/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nconst GiftGrid = ({category}) => {\r\n        \r\n    const {loading,data:images}=useFetchGifts(category);    \r\n    return (\r\n        <>\r\n        {loading && <h1 className=\"animate__animated  animate__flash\">Cargando....</h1>}\r\n        <div className=\"card-grid\">            \r\n            {\r\n                images.map(img=>(\r\n                    <GiftGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>    \r\n        </>\r\n        );\r\n\r\n}\r\n// GiftGrid.propTypes = {\r\n// }\r\n\r\nexport default GiftGrid\r\n","import { useState,useEffect } from \"react\"\r\nimport {getGifts} from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = (category) => {\r\n    const [state,setState] =useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifts(category)\r\n            .then(imgs=>\r\n                {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n                }\r\n            );\r\n    },[category]);\r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GiftGrid from './components/GiftGrid';\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    // const handleAdd=(e)=>{        \r\n    //     setCategories([...categories,\"Hunter X Hunter\"]);\r\n    //     // setCategories(cats=>[...cats],\"HunterXHunter\");//otra alternativa\r\n    // }\r\n\r\n    \r\n    return ( \r\n        <> \r\n        <h2>Gif Expert App</h2>\r\n        <AddCategory\r\n            setCategories={setCategories}\r\n        />\r\n\r\n        <hr/>\r\n        \r\n\r\n        <ol>\r\n            {\r\n                categories.map(category=>(\r\n                \r\n                <GiftGrid\r\n                    key={category}\r\n                    category={category}\r\n                />\r\n                                    \r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from \"./GiftExpertApp\";\nimport './index.css';\n\nReactDOM.render(<GiftExpertApp/>, document.querySelector(\"#root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}